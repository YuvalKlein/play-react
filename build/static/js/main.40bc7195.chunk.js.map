{"version":3,"sources":["axios-sessions.js","actions/mainAction.js","components/SessionList/SessionView/SessionView.js","components/SessionList/NewSession/NewSession.js","components/SessionList/SessionInfo/SessionInfo.js","components/UI/Spinner/Spinner.js","components/SessionList/SessionList.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/ContactUs/ContactUs.js","components/UI/Input/Input.js","components/UI/Button/Button.js","components/LogIn/LogIn.js","components/Account/MySessions/MySessions.js","components/Account/Account.js","components/LogIn/Logout.js","containers/App.js","serviceWorker.js","reducer/sessionReducer.js","reducer/userReducer.js","reducer/index.js","index.js","components/SessionList/SessionView/SessionView.css","components/UI/Input/Input.css","components/SessionList/SessionInfo/SessionInfo.css","components/Navigation/SideDrawer/SideDrawer.css","components/SessionList/NewSession/NewSession.css","components/Navigation/Toolbar/Toolbar.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.css","components/UI/Button/Button.css","components/UI/Spinner/Spinner.css","hoc/Layout/Layout.css","assets/images/logo.bmp","components/Logo/Logo.css","components/Navigation/NavigationItems/NavigationItems.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.css","components/UI/Backdrop/Backdrop.css","components/LogIn/LogIn.css","containers/App.css"],"names":["instance","axios","create","baseURL","addNewSession","component","dispatch","type","payload","createSessionList","sessionList","toggleInfo","session","booked","authStart","authSuccess","email","password","token","refreshToken","userId","idToken","authFail","error","auth","user","alreadyUser","url","post","then","response","console","log","data","localId","catch","err","logout","connect","state","toggle","sessionReducer","sessionInfoToggle","btnToggle","isAuth","userReducer","Object","objectSpread","bindActionCreators","mainActions","props","btnBook","react_default","a","createElement","className","classes","SessionView","Time","time","endTime","Info","onClick","Title","title","location","Players","minPlayers","maxPlayers","Avatars","players","map","player","i","key","alt","FaceImg","src","avatar","Button","Redirect","to","book","Cancel","Book","NewSession","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","titleHandler","setState","target","value","modal","date","details","bind","assertThisInitialized","newS","id","Date","fName","firstName","lName","lastName","createdBy","handleNewSession","_this2","reactstrap_es","color","isOpen","Content","onChange","event","placeholder","handleAdd","React","Component","SessionInfo","curentSession","spinner","Loader","SessionList","newSeesionList","push","get","values","sessionL","sessions","index","SessionView_SessionView","SessionList_NewSession_NewSession","SessionList_SessionInfo_SessionInfo","Spinner_Spinner","logo","Logo","style","height","navigationItem","NavigationItem","NavLink","link","active","closed","children","navigationItems","NavigationItems","NavigationItem_NavigationItem","name","drawerToggle","DrawerToggle","clicked","toolbar","Toolbar","DrawerToggle_DrawerToggle","drawerToggleClicked","Logo_Logo","DesktopOnly","NavigationItems_NavigationItems","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Fragment","Backdrop_Backdrop","join","Layout","showSideDrawer","sideDrawerClosedHandler","sideDrawerToggleHandler","prevState","Toolbar_Toolbar","SideDrawer_SideDrawer","contactUs","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","assign","elementConfig","changed","options","option","displayValue","validationError","ValidationError","Input","Label","label","button","disabled","btnType","LogIn","controls","validation","required","isEmail","valid","minLength","phone","gender","birthDay","inputChangedHandler","controlName","updatedControls","defineProperty","checkValidity","submitHandler","preventDefault","returnSecureToken","onAuth","alreadyUserHandler","rules","isValid","trim","length","maxLengh","maxLength","test","isNumeric","formElementsArray","config","responseGoogle","form","formElement","Input_Input","loading","errorMessage","message","authRedirect","isAuthenticated","onSubmit","Button_Button","google_login_default","clientId","buttonText","onSuccess","onFailure","actions","mySessions","account","Account","Logout","App","hoc_Layout_Layout","Switch","Route","path","exact","MyClasses","ContactUs","ClassInfo","Boolean","window","hostname","match","initialState","arguments","undefined","action","newSesionList","emailName","mobile","created","default","now","usetId","store","createStore","combineReducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","es","BrowserRouter","src_containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","Instructor","Open","Success","Danger","load2","__webpack_require__","p","Loginn","App-logo","App-logo-spin","App-header","App-link"],"mappings":"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","file":"static/js/main.40bc7195.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://play-e37a6.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import axios from 'axios';\r\n\r\nexport const addNewSession = (component) => dispatch => {\r\n    dispatch({\r\n        type: 'ADD_NEW_SESSION',\r\n        payload: component\r\n    })\r\n};\r\nexport const createSessionList = (sessionList) => dispatch => {\r\n    dispatch({\r\n        type: 'CREATE_LIST',\r\n        payload: sessionList\r\n    })\r\n};\r\nexport const toggleInfo = (session) => dispatch => {\r\n    dispatch({\r\n        type: 'TOGGLE_INFO',\r\n        payload:session\r\n    })\r\n};\r\nexport const booked = () => dispatch => {\r\n    dispatch({\r\n        type: 'BOOKED'\r\n    })\r\n};\r\nexport const authStart = () => {\r\n    return {\r\n        type: 'AUTH_START'\r\n    };\r\n};\r\n\r\nexport const authSuccess = (email,password,token, refreshToken, userId) => {\r\n    return {\r\n        type: 'AUTH_SUCCESS',\r\n        idToken: token, \r\n        refreshToken: refreshToken,  \r\n        userId: userId,\r\n        email,\r\n        password\r\n    };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: 'AUTH_FAIL',\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const auth = (user, alreadyUser) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        let url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyAfxKPiu1Zf876cexkIUr--iLFtMaJFxnc';\r\n        if(alreadyUser) {\r\n            url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyAfxKPiu1Zf876cexkIUr--iLFtMaJFxnc';\r\n        };\r\n        axios.post(url, user)\r\n            .then(response => {\r\n                console.log(response);\r\n                dispatch(authSuccess(user.email,user.password,response.data.idToken, response.data.refreshToken, response.data.localId));\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                dispatch(authFail(err.response.data.error));\r\n            });\r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    return {\r\n        type: 'AUTH_LOGOUT',\r\n        token: null,\r\n        refreshToken: null,\r\n        userId: null \r\n    };\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from \"redux\";\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport * as mainActions from \"../../../actions/mainAction\";\r\nimport classes from './SessionView.css';\r\n\r\nconst sessionView = (props) => {\r\n  let btnBook = false;\r\n  const book = (session) => {\r\n    if(props.isAuth){\r\n      btnBook = !btnBook;\r\n    } else {\r\n      return <Redirect to='/login'/>\r\n    }\r\n\r\n  };\r\n\r\n  return ( \r\n      <div  className={classes.SessionView}>\r\n      <div className={classes.Time} >\r\n        <div>{props.session.time}</div>\r\n        <div>{props.session.endTime}</div>\r\n      </div>\r\n      <div className={classes.Info} onClick={()=>props.toggleInfo(props.session)}>\r\n          <p className={classes.Title} >{props.session.title}</p>\r\n        <p>{props.session.location}</p>\r\n      </div>\r\n      <div className={classes.Players} onClick={()=>props.toggleInfo(props.session)}>\r\n            <p>{props.session.minPlayers}\\{props.session.maxPlayers}</p>\r\n            <div className={classes.Avatars}>{props.session.players.map((player,i) => <div key={i}><img alt=\"\" className={classes.FaceImg} src={player.avatar}/></div>)}</div>\r\n      </div>\r\n      <div className={classes.Button}>\r\n        <button onClick={()=>book(props.session)} className={btnBook?classes.Cancel : classes.Book} >{btnBook?\"CANCEL\":\"BOOK\"}</button>\r\n      </div> \r\n    </div>\r\n  );\r\n};\r\n   \r\n\r\n      \r\nconst mapStateToProps = state => ({\r\n  toggle: state.sessionReducer.sessionInfoToggle,\r\n  btnToggle: state.sessionReducer.booked,\r\n  isAuth: state.userReducer.token !== null\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {...bindActionCreators(mainActions, dispatch)}\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(sessionView);","import React from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport classes from './NewSession.css';\r\n\r\nclass NewSession extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal: false,\r\n      date:null,\r\n      time:null,\r\n      details: null,\r\n      endTime:null,\r\n      title:null,\r\n      location:null,\r\n      minPlayers:null,\r\n      maxPlayers:null\r\n    };\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n  handleAdd(){\r\n    this.toggle();\r\n    console.log('user',this.props.user)\r\n    let newS ={}\r\n    if(this.props.user){\r\n      newS = {\r\n        id: new Date(),\r\n        date:this.state.date,\r\n        time:this.state.time,\r\n        endTime:this.state.endTime,\r\n        title:this.state.title,\r\n        details:this.state.details,\r\n        location:this.state.location,\r\n        players: [{\r\n          userId: this.props.user.userId,\r\n          fName: this.props.user.firstName,\r\n          lName: this.props.user.lastName,\r\n          avatar: this.props.user.avatar\r\n        }],\r\n        createdBy: {\r\n          userId: this.props.user.userId,\r\n          fName: this.props.user.firstName,\r\n          lName: this.props.user.lastName,\r\n          avatar: this.props.user.avatar\r\n        },\r\n        minPlayers: this.state.minPlayers,\r\n        maxPlayers: this.state.maxPlayers\r\n      }\r\n      this.props.handleNewSession(newS)\r\n    }\r\n\r\n  }\r\n  toggle() {\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n  }\r\n\r\n  titleHandler=(title) => {\r\n    this.setState({title:title.target.value})    \r\n  }\r\n\r\n  render() {\r\n    // let user = this.props.user;\r\n    return (\r\n      <div>\r\n        <Button color=\"danger\" onClick={this.toggle}>+ ADD</Button>\r\n        <Modal isOpen={this.state.modal} toggle={this.toggle} className={classes.NewSession} >\r\n          <ModalHeader toggle={this.toggle}>Add new Class</ModalHeader>\r\n          <ModalBody className={classes.Content}>\r\n          \r\n              <input type='text' onChange={(event)=>{this.setState({title:event.target.value})}} placeholder='Title' />\r\n              <textarea type='text' onChange={(event)=>{this.setState({details:event.target.value})}} placeholder='Detials'/>\r\n              <input type='text' onChange={(event)=>{this.setState({location:event.target.value})}} placeholder='Location' />           \r\n              <input type='time' onChange={(event)=>{this.setState({time:event.target.value})}} />           \r\n              <input type='time' onChange={(event)=>{this.setState({endTime:event.target.value})}} />           \r\n              <input type='date' onChange={(event)=>{this.setState({date:event.target.value})}} />           \r\n              <input type='number' onChange={(event)=>{this.setState({minPlayers:event.target.value})}} placeholder='Minimum Players'/>           \r\n              <input type='number' onChange={(event)=>{this.setState({maxPlayers:event.target.value})}} placeholder='Maximum Players'/>           \r\n\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={this.handleAdd.bind(this)}>ADD</Button>\r\n            <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default NewSession;","import React from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from \"redux\";\r\n\r\nimport * as mainActions from \"../../../actions/mainAction\"; \r\n\r\nimport Map from '../../Map/Map';\r\nimport classes from './SessionInfo.css';\r\n\r\nclass SessionInfo extends React.Component {\r\n\r\n  render() {\r\n      // const icons = [];\r\n      let curentSession=this.props.session.createdBy ?this.props.session :{createdBy:{}, players:[]}\r\n    return (\r\n      <div>\r\n        <Modal isOpen={this.props.toggle}  >\r\n          <ModalHeader toggle={()=>this.props.toggleInfo({})}>{curentSession.title}</ModalHeader>\r\n          <ModalBody className={classes.SessionInfo}>\r\n              <p>Craeted By: {curentSession.createdBy.fName +\"  \"+ curentSession.createdBy.lName} </p>\r\n              <img alt=\"\" className={classes.FaceImg} src={curentSession.createdBy.avatar}/>\r\n              <p>{curentSession.details}</p>\r\n              <div className={classes.Players}>{curentSession.players.map((player,i) => <div key={i}><img alt=\"\" className={classes.FaceImg} src={player.avatar}/></div>)}</div>\r\n              {/* <Map/> */}\r\n\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"secondary\" onClick={this.props.booked}>BOOK</Button>\r\n            <Button color=\"secondary\" onClick={this.props.toggleInfo}>EDIT</Button>\r\n            <Button color=\"secondary\" onClick={this.props.toggleInfo}>CANCEL</Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    toggle: state.sessionReducer.sessionInfoToggle,\r\n    session: state.sessionReducer.session,\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {...bindActionCreators(mainActions, dispatch)}\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SessionInfo);","import React from 'react';\r\n\r\nimport classes from './Spinner.css';\r\n\r\nconst spinner = () => (<div className={classes.Loader}>Loading...</div>);\r\n\r\nexport default spinner;","import React, { Component } from 'react';\r\n// import './SessionList.css';\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport axios from '../../axios-sessions';\r\n\r\nimport * as mainActions from \"../../actions/mainAction\";\r\nimport SessionView from './SessionView/SessionView';\r\nimport NewSession from './NewSession/NewSession';\r\nimport SessionInfo from '../SessionList/SessionInfo/SessionInfo';\r\nimport Spinner from '../UI/Spinner/Spinner';\r\n\r\nclass SessionList extends Component {\r\n  state={\r\n    sessionList: []\r\n  };\r\n  componentDidMount(){\r\n    axios.get('/sessionList.json')\r\n      .then(response => {\r\n\r\n        this.setState({sessionList: Object.values(response.data)});\r\n      });\r\n  }\r\n  \r\n  handleAdd=(session)=>{\r\n     let newSeesionList = this.state.sessionList;\r\n        newSeesionList.push(session)\r\n    this.setState({sessionList:newSeesionList});\r\n    axios.post('/sessionList.json', session)\r\n    this.props.addNewSession(session)\r\n  };\r\n\r\n  render() {\r\n    let sessionL =this.state.sessionList\r\n    if(sessionL){\r\n      const sessions = Object.values(sessionL).map((session, index) => {\r\n        return (\r\n          <SessionView key={index} session={session} />\r\n        );\r\n      });\r\n  \r\n      return (\r\n        <div >\r\n            <h1>Today</h1>\r\n          {sessions}\r\n          <NewSession handleNewSession={this.handleAdd } user={this.props.user} isAuth={this.props.isAuth}/>\r\n          <SessionInfo/>\r\n        </div>\r\n      );\r\n    }else{\r\n      return  <Spinner/> \r\n    }\r\n\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  sessionList: state.sessionReducer.sessionList,\r\n  user:state.userReducer,\r\n  isAuth: state.userReducer.token !== null\r\n\r\n});\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {...bindActionCreators(mainActions, dispatch)}\r\n};\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SessionList, axios);","import React from 'react';\r\n\r\nimport Logo from '../../assets/images/logo.bmp'; \r\nimport classes from './Logo.css';\r\n\r\nconst logo = (props) => (\r\n    <div className={classes.Logo} style={{height: props.height}}>\r\n        <img src={Logo} alt=\"MyBurger\"/>\r\n    </div>\r\n)\r\n\r\nexport default logo;","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nimport classes from './NavigationItem.css'\r\n\r\nconst navigationItem = (props) => {\r\n    return(\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink to={props.link} \r\n            className={props.active ? classes.active : null}\r\n            onClick={props.closed}\r\n            >{props.children}</NavLink>\r\n    </li>\r\n);}\r\n\r\nexport default navigationItem;","import React from 'react';\r\n\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\nimport classes from './NavigationItems.css'\r\n\r\nconst navigationItems = (props) => (\r\n    <ul className={classes.NavigationItems}>\r\n        {props.isAuth\r\n            ? <NavigationItem link=\"/account\" closed={props.closed}>Welcome {props.name}!</NavigationItem>\r\n            : <NavigationItem link=\"/login\" closed={props.closed}>Log In</NavigationItem>}\r\n        <NavigationItem link=\"/\" closed={props.closed}>Schedule</NavigationItem>\r\n        <NavigationItem link=\"/MyClasses\" closed={props.closed}>My Classes</NavigationItem>\r\n        <NavigationItem link=\"/contact\" closed={props.closed}>Contact Us</NavigationItem>\r\n        {props.isAuth\r\n            ? <NavigationItem link=\"/logout\" closed={props.closed}>Loguot</NavigationItem>\r\n            : null}\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;","import React from 'react';\r\nimport classes from './DrawerToggle.css';\r\n\r\nconst drawerToggle = (props) => {\r\n    return(\r\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);}\r\n\r\nexport default drawerToggle;","import React from 'react';\r\n\r\nimport classes from './Toolbar.css'\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = (props) => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.drawerToggleClicked} />\r\n        <Logo height=\"80%\"/>\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems isAuth={props.isAuth} name={props.name}/>\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react';\r\n\r\nimport classes from './Backdrop.css';\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React from 'react';\r\n\r\nimport classes from './SideDrawer.css'\r\nimport Logo from '../../Logo/Logo';\r\nimport  NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\n\r\n\r\nconst sideDrawer = (props) => {\r\n    let attachedClasses = [classes.SideDrawer, classes.Close];\r\n    if (props.open) {\r\n        attachedClasses = [classes.SideDrawer, classes.open];\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <Backdrop show={props.open} clicked={props.closed}/>\r\n            <div className={attachedClasses.join(\" \")}>\r\n                <Logo height=\"11%\" />\r\n                <nav>\r\n                    <NavigationItems closed={props.closed} isAuth={props.isAuth} name={props.name}/>\r\n                </nav>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default sideDrawer;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport classes from './Layout.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component  {\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({showSideDrawer: false});\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState((prevState) => {\r\n            return {showSideDrawer: !prevState.showSideDrawer};\r\n        });   \r\n    }\r\n\r\n    render () {\r\n        return(\r\n            <>\r\n                <Toolbar \r\n                    isAuth={this.props.isAuth}\r\n                    name={this.props.name}\r\n                    drawerToggleClicked={this.sideDrawerToggleHandler}/>\r\n                <SideDrawer \r\n                    isAuth={this.props.isAuth}\r\n                    name={this.props.name}\r\n                    open={this.state.showSideDrawer} \r\n                    closed={this.sideDrawerClosedHandler}/>\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateTProps = state => {\r\n    return {\r\n        isAuth: state.userReducer.token !== null,\r\n        name: state.userReducer.firstName\r\n    };\r\n};\r\n\r\nexport default connect(mapStateTProps)(Layout);","import React from 'react';\r\n\r\nconst contactUs = (props) => {\r\n    return(\r\n        <div>Contact Us</div>\r\n    )\r\n}\r\n\r\nexport default contactUs;","import React from 'react';\r\n\r\nimport classes from './Input.css';\r\n\r\nconst input = (props) => {\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n\r\n    if(props.invalid && props.shouldValidate && props.touched){\r\n        inputClasses.push(classes.Invalid);\r\n    };\r\n\r\n    switch(props.elementType) {\r\n        case('input'):\r\n            inputElement = <input \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n        case('textarea'):\r\n            inputElement = <textarea \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n        case('select'):\r\n            inputElement = (\r\n                <select \r\n                    className={inputClasses.join(' ')} \r\n                    value={props.value}\r\n                    onChange={props.changed}>\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option key={option.value} value={option.value} >\r\n                            {option.displayValue}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            );\r\n            break;\r\n        default:\r\n            inputElement = <input \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig}\r\n                value={props.value} />;\r\n    };\r\n\r\n    let validationError = null;\r\n\r\n    if (props.invalid && props.touched) {\r\n        validationError = <p className={classes.ValidationError}>Please enter a valid {props.elementType.value}</p>;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n            {validationError}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default input;","import React from 'react';\r\n\r\nimport classes from './Button.css';\r\n\r\nconst button = (props) =>(\r\n    <button\r\n        disabled={props.disabled}    \r\n        className={[classes.Button, classes[props.btnType]].join(' ')}\r\n        onClick={props.clicked} >{props.children}</button>\r\n);\r\n\r\nexport default button;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport GoogleLogin from 'react-google-login';\r\n\r\n\r\nimport classes from './LogIn.css';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport * as actions from '../../actions/mainAction';\r\n\r\nclass LogIn extends React.Component {\r\n    state = {\r\n        alreadyUser: true,\r\n        controls: {\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Email'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            password: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'password',\r\n                    placeholder: 'Password'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            firstName: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'First Name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            lastName: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Last Name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            phone: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'tel',\r\n                    placeholder: 'Phone'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            avatar: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'file',\r\n                    placeholder: 'Upload File'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            gender: [{\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'radio',\r\n                    name: \"gender\",\r\n                    value: \"male\",\r\n                    placeholder: 'gender'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'radio',\r\n                    name: \"gender\",\r\n                    value: \"female\",\r\n                    placeholder: 'gender'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            }],\r\n            birthDay: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'date',\r\n                    placeholder: 'BirthDay'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            }\r\n        }\r\n    }\r\n\r\n    checkValidity(value, rules) {\r\n        let isValid = true;\r\n        \r\n        if(rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if(rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n        \r\n        if(rules.maxLengh) {\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        if (rules.isEmail) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        if (rules.isNumeric) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, controlName) => {\r\n        const updatedControls = {\r\n            ...this.state.controls,\r\n            [controlName]: {\r\n                ...this.state.controls[controlName],\r\n                value: event.target.value,\r\n                valid: this.checkValidity(event.target.value, this.state.controls[controlName].validation),\r\n                touched: true\r\n            }\r\n        };\r\n        this.setState({controls: updatedControls});\r\n    };\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        let user = {\r\n            email:this.state.controls.email.value,\r\n            password: this.state.controls.password.value,\r\n            returnSecureToken: true\r\n        }\r\n        this.props.onAuth(user, this.state.alreadyUser);\r\n\r\n    };\r\n\r\n    alreadyUserHandler = () => {\r\n        this.setState({alreadyUser: !this.state.alreadyUser});\r\n    };\r\n\r\n\r\n    render () {\r\n        let formElementsArray = [];\r\n        if (this.state.alreadyUser) {\r\n            formElementsArray = [\r\n                {\r\n                    id: \"email\",\r\n                    config: this.state.controls.email\r\n                },\r\n                {\r\n                    id: \"password\",\r\n                    config: this.state.controls.password\r\n                } ];\r\n        } else {\r\n            for(let key in this.state.controls){\r\n                formElementsArray.push({\r\n                    id: key,\r\n                    config: this.state.controls[key]\r\n                });\r\n            };\r\n            console.log(formElementsArray);\r\n        }\r\n\r\n        const responseGoogle = (response) => {\r\n            console.log(response);\r\n        };\r\n\r\n        let form = formElementsArray.map(formElement => (\r\n            <Input\r\n                key={formElement.id}\r\n                elementType={formElement.config.elementType} \r\n                elementConfig={formElement.config.elementConfig}\r\n                value={formElement.config.value}\r\n                invalid={!formElement.config.valid}\r\n                shouldValidate={formElement.config.validation}\r\n                touched={formElement.config.touched}\r\n                changed={(event) => this.inputChangedHandler(event, formElement.id)}/>\r\n        ));\r\n\r\n        if (this.props.loading) {\r\n            form = <Spinner />\r\n        };\r\n\r\n        let errorMessage = null;\r\n\r\n        if (this.props.error) {\r\n            errorMessage = (\r\n                <p>{this.props.error.message}</p>\r\n            );\r\n        };\r\n\r\n        let authRedirect = null;\r\n        if (this.props.isAuthenticated) {\r\n            authRedirect = <Redirect to='/'/>\r\n        }\r\n\r\n        return (\r\n            <div className={classes.LogIn}>\r\n                {authRedirect}\r\n                {errorMessage}\r\n                <form onSubmit={this.submitHandler}>\r\n                    {form}\r\n                    {this.state.alreadyUser ? \r\n                        <div>\r\n                            <Button btnType=\"Success\">Sign in</Button>\r\n                            <p>New PLAYer? <a onClick={this.alreadyUserHandler}>Join Us</a></p> \r\n                        </div>\r\n                        : <div>\r\n                            <Button btnType=\"Success\">Sign up</Button>\r\n                            <p>Already PLAYer? <a onClick={this.alreadyUserHandler}>Sign in</a></p>\r\n                          </div>}\r\n                </form>\r\n                <GoogleLogin\r\n                    clientId=\"203139564983-9gd9ebikj3pct8ptmkkt6r2atcf838qu.apps.googleusercontent.com\"\r\n                    buttonText=\"Login\"\r\n                    onSuccess={responseGoogle}\r\n                    onFailure={responseGoogle}\r\n                />\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        loading: state.userReducer.loading,\r\n        error: state.userReducer.error,\r\n        isAuthenticated: state.userReducer.token !== null,\r\n        alreadyUser: state.userReducer.alreadyUser\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return {\r\n        onAuth: (user, alreadyUser) => dispatch(actions.auth(user, alreadyUser)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LogIn);","import React from 'react';\r\n\r\nconst mySessions = (props) => {\r\n    return(\r\n        <div>My Sessions</div>\r\n    )\r\n}\r\n\r\nexport default mySessions;","import React from 'react';\r\n\r\nimport classes from './Account.css'\r\n\r\nconst account = (props) => (\r\n    <div className={classes.Account}>\r\n        Account\r\n    </div>\r\n);\r\n\r\nexport default account;","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {bindActionCreators} from \"redux\";\r\nimport * as mainActions from \"../../actions/mainAction\"; \r\n\r\n\r\nclass Logout extends Component {\r\n    componentDidMount () {\r\n        this.props.logout();\r\n    }\r\n    render () {\r\n        return <Redirect to=\"/\"/>;\r\n    };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {...bindActionCreators(mainActions, dispatch)}\r\n  };\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { Component } from 'react';\nimport './App.css';\nimport SessionList from '../components/SessionList/SessionList';\nimport {Switch,Route} from 'react-router-dom'\nimport Layout from '../hoc/Layout/Layout';\nimport ContactUs from '../components/ContactUs/ContactUs';\nimport LogIn from '../components/LogIn/LogIn';\nimport MyClasses from '../components/Account/MySessions/MySessions';\nimport ClassInfo from '../components/SessionList/SessionInfo/SessionInfo';\nimport Account from '../components/Account/Account';\nimport Logout from '../components/LogIn/Logout';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Layout> \n          <Switch>\n            <Route path=\"/login\" exact component={LogIn}/>\n            <Route path=\"/logout\" exact component={Logout}/>\n            <Route path=\"/account\" exact component={Account}/>\n            <Route path=\"/\" exact component={SessionList}/>\n            <Route path=\"/myclasses\" exact component={MyClasses}/>\n            <Route path=\"/contact\" exact component={ContactUs}/>\n            <Route path=\"/classinfo\" exact component={ClassInfo}/>\n          </Switch>\n          {/* <AddButton/> */}\n        </Layout> \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\r\nconst initialState = {\r\n    sessionList:[],\r\n    sessionInfoToggle: false,\r\n    session: {},\r\n    booked: false\r\n};\r\n  \r\nconst  sessionReducer =(state = initialState, action)=> {\r\n    switch (action.type) {\r\n        case\"CREATE_LIST\":\r\n            return {...state,sessionList:action.payload}       \r\n        case \"ADD_NEW_SESSION\":\r\n            let newSesionList = state.sessionList;\r\n            newSesionList.push(action.payload)\r\n            return {...state,sessionList: newSesionList};\r\n        case \"DELETE\":\r\n            return state;\r\n        case \"TOGGLE_INFO\":\r\n            return {...state,sessionInfoToggle: !state.sessionInfoToggle,session:action.payload};\r\n        case \"BOOKED\":\r\n            return {...state,booked: !state.booked};\r\n        default: return state\r\n    }\r\n};\r\nexport default sessionReducer;\r\n","\r\nconst initialState = {\r\n    type: 'player',\r\n    firstName: 'Ilya',\r\n    lastName: 'Radu',\r\n    emailName: 'radu@gmail.com',\r\n    token: null,\r\n    refreshToken: null,\r\n    userId: null,\r\n    avatar: 'https://randomuser.me/api/portraits/men/97.jpg',\r\n    mobile: '123456',\r\n    created: {type: Date, default: Date.now},\r\n    error: null,\r\n    loading: false,\r\n    alreadyUser: false\r\n};\r\n  \r\nconst  userReducer =(state = initialState, action)=> {\r\n    switch (action.type) {\r\n        case \"GET_USER\":\r\n            return state;\r\n        case \"AUTH_START\":\r\n            return {\r\n                ...state, \r\n                error: null, \r\n                loading: true\r\n            };\r\n        case \"AUTH_SUCCESS\":\r\n            return {\r\n                ...state, \r\n                token: action.idToken,\r\n                refreshToken: action.refreshToken,\r\n                userId: action.userId,\r\n                email:action.email,\r\n                password:action.password,\r\n                error: null, \r\n                loading: false\r\n            };\r\n        case \"AUTH_FAIL\":\r\n            return {\r\n                ...state, \r\n                error: action.error, \r\n                loading: false\r\n            };\r\n        case \"AUTH_LOGOUT\":\r\n            return {\r\n               ...state,\r\n               token: null,\r\n               refreshToken: null,\r\n               usetId: null \r\n            }\r\n        default: return state\r\n    }\r\n};\r\nexport default userReducer;\r\n","import {createStore,applyMiddleware,combineReducers} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\n\r\nimport sessionReducer from './sessionReducer';\r\nimport userReducer from './userReducer';\r\nconst store =createStore(combineReducers({sessionReducer,userReducer}), composeWithDevTools(applyMiddleware(thunk)));\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"bootstrap/scss/bootstrap.scss\"\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport store from './reducer/index'\r\nimport {Provider} from 'react-redux'\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>  \r\n     </Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SessionView\":\"SessionView__SessionView__3A4in\",\"Time\":\"SessionView__Time__1jWnG\",\"Info\":\"SessionView__Info__2zIOa\",\"Title\":\"SessionView__Title__sXVeY\",\"Instructor\":\"SessionView__Instructor__10lhf\",\"Players\":\"SessionView__Players__2p210\",\"Avatars\":\"SessionView__Avatars__2nvxK\",\"FaceImg\":\"SessionView__FaceImg__1b7B3\",\"Button\":\"SessionView__Button__12tkH\",\"Book\":\"SessionView__Book__2eKuO\",\"Cancel\":\"SessionView__Cancel__3qaFQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input__1VROp\",\"Label\":\"Input__Label__1tOSX\",\"InputElement\":\"Input__InputElement__3TB0k\",\"Invalid\":\"Input__Invalid__38X2d\",\"ValidationError\":\"Input__ValidationError__ukId8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SessionInfo\":\"SessionInfo__SessionInfo__MTUTv\",\"FaceImg\":\"SessionInfo__FaceImg__3JPdS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer__SideDrawer__3wvlM\",\"Open\":\"SideDrawer__Open__3xsf8\",\"Close\":\"SideDrawer__Close__2S6c7\",\"Logo\":\"SideDrawer__Logo__10IHv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NewSession\":\"NewSession__NewSession__27xtK\",\"Content\":\"NewSession__Content__3f4Bt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar__Toolbar__2hkfg\",\"Logo\":\"Toolbar__Logo__24rue\",\"DesktopOnly\":\"Toolbar__DesktopOnly__15Sc_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem__NavigationItem__3YSjr\",\"active\":\"NavigationItem__active__2GQz1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button__ajevi\",\"Success\":\"Button__Success__1DMln\",\"Danger\":\"Button__Danger__18hYt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner__Loader__3dgUo\",\"load2\":\"Spinner__load2__1sg5x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout__Content__3KSp3\"};","module.exports = __webpack_public_path__ + \"static/media/logo.39bc7bcb.bmp\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo__Logo__2A07e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems__NavigationItems__3HY9i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle__DrawerToggle__1eThf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop__Backdrop__eeZpu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loginn\":\"LogIn__Loginn__xbRYO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App__App__3t9oX\",\"App-logo\":\"App__App-logo__DAe5h\",\"App-logo-spin\":\"App__App-logo-spin__Xlw7n\",\"App-header\":\"App__App-header__UYaud\",\"App-link\":\"App__App-link__3ACRH\"};"],"sourceRoot":""}