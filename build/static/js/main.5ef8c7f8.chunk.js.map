{"version":3,"sources":["components/Navigation/SideDrawer/SideDrawer.css","components/Navigation/Toolbar/Toolbar.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.css","hoc/Layout/Layout.css","assets/images/logo.bmp","components/Logo/Logo.css","components/Navigation/NavigationItems/NavigationItems.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.css","components/UI/Backdrop/Backdrop.css","containers/App.css","components/SessionList/SessionView/SessionView.js","components/SessionList/SessionList.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/ContactUs/ContactUs.js","components/LogIn/LogIn.js","components/Account/MySessions/MySessions.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","SideDrawer","Open","Close","Logo","Toolbar","DesktopOnly","NavigationItem","active","Content","__webpack_require__","p","NavigationItems","DrawerToggle","Backdrop","App","App-logo","App-logo-spin","App-header","App-link","sessionView","props","react_default","a","createElement","Fragment","session","date","sessionName","instructor","location","players","map","player","i","key","fName","lName","mockData","require","SessionList","console","log","sessionList","sessions","index","SessionView","Component","logo","className","classes","style","height","src","alt","navigationItem","NavLink","to","link","onClick","closed","children","navigationItems","NavigationItem_NavigationItem","drawerToggle","clicked","toolbar","DrawerToggle_DrawerToggle","drawerToggleClicked","Logo_Logo","NavigationItems_NavigationItems","backdrop","show","sideDrawer","attachedClasses","open","Backdrop_Backdrop","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","_this","setState","sideDrawerToggleHandler","prevState","Toolbar_Toolbar","this","SideDrawer_SideDrawer","contactUs","logIn","mySessions","hoc_Layout_Layout","Switch","Route","path","exact","component","LogIn","MyClasses","ContactUs","Boolean","window","hostname","match","ReactDOM","render","BrowserRouter","src_containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5ef8c7f8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer__SideDrawer__3wvlM\",\"Open\":\"SideDrawer__Open__3xsf8\",\"Close\":\"SideDrawer__Close__2S6c7\",\"Logo\":\"SideDrawer__Logo__10IHv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar__Toolbar__2hkfg\",\"Logo\":\"Toolbar__Logo__24rue\",\"DesktopOnly\":\"Toolbar__DesktopOnly__15Sc_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem__NavigationItem__3YSjr\",\"active\":\"NavigationItem__active__2GQz1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout__Content__3KSp3\"};","module.exports = __webpack_public_path__ + \"static/media/logo.39bc7bcb.bmp\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo__Logo__2A07e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems__NavigationItems__3HY9i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle__DrawerToggle__1eThf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop__Backdrop__eeZpu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App__App__3t9oX\",\"App-logo\":\"App__App-logo__DAe5h\",\"App-logo-spin\":\"App__App-logo-spin__Xlw7n\",\"App-header\":\"App__App-header__UYaud\",\"App-link\":\"App__App-link__3ACRH\"};","import React from 'react';\r\n\r\n// import './Session.css';\r\n\r\nconst sessionView = (props) => \r\n      < >\r\n        <div >{props.session.date}</div>\r\n        <div >\r\n          <p>Session name: {props.session.sessionName}</p>\r\n          <p>Instructor: {props.session.instructor}</p>\r\n          <p>Location: {props.session.location}</p>\r\n          <div>Players: {props.session.players.map((player,i) => <p key={i}>{player.fName + \" \" + player.lName}</p>)}</div>\r\n        </div>\r\n        <div>\r\n          <button>BOOK</button>\r\n        </div>\r\n      </>\r\n\r\nexport default sessionView;","import React, { Component } from 'react';\r\n// import './SessionList.css';\r\n\r\nimport SessionView from './SessionView/SessionView';\r\nlet mockData = require('./mockData')\r\n\r\nclass SessionList extends Component {\r\n\r\n  render() {\r\n    console.log(mockData.sessionList)\r\n    const sessions = mockData.sessionList.map((session, index) => {\r\n      return (\r\n        <SessionView key={index} session={session}/>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div >\r\n          <h1>SessionList</h1>\r\n        {sessions}\r\n        <button>+</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SessionList;","import React from 'react';\r\n\r\nimport Logo from '../../assets/images/logo.bmp'; \r\nimport classes from './Logo.css';\r\n\r\nconst logo = (props) => (\r\n    <div className={classes.Logo} style={{height: props.height}}>\r\n        <img src={Logo} alt=\"MyBurger\"/>\r\n    </div>\r\n)\r\n\r\nexport default logo;","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nimport classes from './NavigationItem.css'\r\n\r\nconst navigationItem = (props) => {\r\n    console.log('navigationItem',props)\r\n    return(\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink to={props.link} \r\n            className={props.active ? classes.active : null}\r\n            // how to pass this props so the menu will close on click\r\n            onClick={props.closed}\r\n            >{props.children}</NavLink>\r\n    </li>\r\n);}\r\n\r\nexport default navigationItem;","import React from 'react';\r\n\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\nimport classes from './NavigationItems.css'\r\n\r\nconst navigationItems = (props) => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link=\"/login\" closed={props.closed}>Welcome!</NavigationItem>\r\n        <NavigationItem link=\"/\" closed={props.closed}>Schedule</NavigationItem>\r\n        <NavigationItem link=\"/MyClasses\" closed={props.closed}>My Classes</NavigationItem>\r\n        <NavigationItem link=\"/contact\" closed={props.closed}>Contact Us</NavigationItem>\r\n        <NavigationItem link=\"/\" closed={props.closed}>Loguot</NavigationItem>\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;","import React from 'react';\r\nimport classes from './DrawerToggle.css';\r\n\r\nconst drawerToggle = (props) => {\r\n    console.log('drawerToggle',props.clicked)\r\n    return(\r\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);}\r\n\r\nexport default drawerToggle;","import React from 'react';\r\n\r\nimport classes from './Toolbar.css'\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = (props) => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.drawerToggleClicked} />\r\n        <Logo height=\"80%\"/>\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems/>\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react';\r\n\r\nimport classes from './Backdrop.css';\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React from 'react';\r\n\r\nimport classes from './SideDrawer.css'\r\nimport Logo from '../../Logo/Logo';\r\nimport  NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\n\r\n\r\nconst sideDrawer = (props) => {\r\n    let attachedClasses = [classes.SideDrawer, classes.Close];\r\n    if (props.open) {\r\n        attachedClasses = [classes.SideDrawer, classes.open];\r\n    }\r\n    console.log('sideDrawer',props);\r\n    \r\n    return (\r\n        <>\r\n            <Backdrop show={props.open} clicked={props.closed}/>\r\n            <div className={attachedClasses.join(\" \")}>\r\n                <Logo height=\"11%\" />\r\n                <nav>\r\n                    <NavigationItems closed={props.closed}/>\r\n                </nav>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default sideDrawer;","import React, {Component} from 'react';\r\nimport classes from './Layout.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component  {\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({showSideDrawer: false});\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState((prevState) => {\r\n            return {showSideDrawer: !prevState.showSideDrawer};\r\n        });   \r\n    }\r\n\r\n    render () {\r\n        return(\r\n            <>\r\n                <Toolbar \r\n                    drawerToggleClicked={this.sideDrawerToggleHandler}/>\r\n                <SideDrawer \r\n                    open={this.state.showSideDrawer} \r\n                    closed={this.sideDrawerClosedHandler}/>\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Layout;","import React from 'react';\r\n\r\nconst contactUs = (props) => {\r\n    return(\r\n        <div>Contact Us</div>\r\n    )\r\n}\r\n\r\nexport default contactUs;","import React from 'react';\r\n\r\nconst logIn = (props) => {\r\n    return(\r\n        <div>Log in</div>\r\n    )\r\n}\r\n\r\nexport default logIn;","import React from 'react';\r\n\r\nconst mySessions = (props) => {\r\n    return(\r\n        <div>My Sessions</div>\r\n    )\r\n}\r\n\r\nexport default mySessions;","import React, { Component } from 'react';\nimport './App.css';\nimport SessionList from '../components/SessionList/SessionList';\nimport {Switch,Route} from 'react-router-dom'\nimport Layout from '../hoc/Layout/Layout';\nimport ContactUs from '../components/ContactUs/ContactUs';\nimport LogIn from '../components/LogIn/LogIn';\nimport MyClasses from '../components/Account/MySessions/MySessions';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Layout> \n          <Switch>\n            <Route path=\"/login\" exact component={LogIn}/>\n            <Route path=\"/\" exact component={SessionList}/>\n            <Route path=\"/myclasses\" exact component={MyClasses}/>\n            <Route path=\"/contact\" exact component={ContactUs}/>\n          </Switch>\n          {/* <AddButton/> */}\n        </Layout> \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>   , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}